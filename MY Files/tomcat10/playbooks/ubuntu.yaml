---
- name: install tomcat
  hosts: tomcat
  become: yes
  tasks: 
    - name: check if playbook is being executed on supported os
      ansible.builtin.fail:
        msg: "This playbook is designed to run on ubuntu only"
      when: ansible_facts['distribution'] != "Ubuntu"

    - name: install java
      ansible.builtin.apt:
        name: "{{ java_package_Ubuntu }}"
        update_cache: yes
        state: present
    
    - name: create group
      ansible.builtin.group:
        name: "{{ group }}"
        state: present

    - name: create user
      ansible.builtin.user:
        name: "{{ user }}"
        create_home: yes
        home: "{{ homedir }}"
        shell: "{{ shell }}"
        group: "{{ group }}"

    - name: download tomcat
      ansible.builtin.get_url:
        url: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"

    - name: find if the tomcat is already extracted
      ansible.builtin.stat:
        path: "{{ homedir }}/apache-tomcat-{{ tomcat_version }}/LICENSE"
      register: license_info

    - name: extract tomcat
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ homedir }}"
        remote_src: yes
      when: not license_info.stat.exists 

    - name: create symlink
      ansible.builtin.file:
        src: "{{ homedir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ homedir }}/latest"
        state: link
      notify:
        - Recursively change ownership
        - Add execute permissions for shell scripts
    - name: Flush Handlers
      meta: flush_handlers    

    - name: copy the service file
      ansible.builtin.copy:
        src: tomcat.service.j2
        dest: /etc/systemd/system/tomcat.service
      notify:
        - reload daemon

    - name: ensure tomcat is enabled and running
      ansible.builtin.systemd:
        name: tomcat
        enabled: yes
        state: started
        daemon_reload: yes
        daemon_reexec: yes

  handlers:
    - name: Recursively change ownership
      ansible.builtin.file:
        path: "{{ homedir }}"
        owner: "{{ user }}"
        group: "{{ group }}"
        recurse: yes
        state: directory

    - name: Add execute permissions for shell scripts
      ansible.builtin.shell:
        cmd: "chmod +x {{ homedir }}/latest/bin/*.sh"
      
    - name: reload daemon
      ansible.builtin.systemd:
        daemon_reload: yes
    
    

      
        
        